name: Publish Browser Extensions

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write

jobs:
  publish:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Check for package.json
        id: check_files
        run: |
          if [ -f "package.json" ]; then
            echo "package_exists=true" >> $GITHUB_OUTPUT
          else
            echo "package_exists=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Create basic package.json if missing
        if: steps.check_files.outputs.package_exists == 'false'
        run: |
          echo '{"name":"chrome-extension","version":"1.0.0","scripts":{"build":"mkdir -p dist"}}' > package.json
          mkdir -p dist
          
      - name: Install & Build
        run: |
          npm install
          npm run build

      - name: Update Version Numbers
        run: |
          # Update version in all manifest files
          if command -v jq &> /dev/null; then
            jq '.version = "1.0.'$GITHUB_RUN_NUMBER'"' manifest.json > manifest.json.tmp && mv manifest.json.tmp manifest.json
            jq '.version = "1.0.'$GITHUB_RUN_NUMBER'"' manifest.firefox.json > manifest.firefox.json.tmp && mv manifest.firefox.json.tmp manifest.firefox.json
            jq '.version = "1.0.'$GITHUB_RUN_NUMBER'"' manifest.safari.json > manifest.safari.json.tmp && mv manifest.safari.json.tmp manifest.safari.json
          else
            # Fallback to sed if jq is not available
            sed -i 's/"version": "[^"]*"/"version": "1.0.'$GITHUB_RUN_NUMBER'"/g' manifest.json
            sed -i 's/"version": "[^"]*"/"version": "1.0.'$GITHUB_RUN_NUMBER'"/g' manifest.firefox.json
            sed -i 's/"version": "[^"]*"/"version": "1.0.'$GITHUB_RUN_NUMBER'"/g' manifest.safari.json
          fi
          
      - name: Package Extensions
        run: |
          chmod +x ./build.sh
          ./build.sh

      - name: Upload & Publish Chrome Extension
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          file-path: extension-chrome.zip
          extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          publish: true
          
      # Firefox publishing requires manual upload or a custom script
      # Safari publishing requires Apple Developer account and additional steps
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
          files: |
            extension-chrome.zip
            extension-firefox.zip
            extension-safari.zip
