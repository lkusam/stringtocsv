name: Publish Chrome Extension

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  publish:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Check for package.json
        id: check_files
        run: |
          if [ -f "package.json" ]; then
            echo "package_exists=true" >> $GITHUB_OUTPUT
          else
            echo "package_exists=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Create basic package.json if missing
        if: steps.check_files.outputs.package_exists == 'false'
        run: |
          echo '{"name":"chrome-extension","version":"1.0.0","scripts":{"build":"mkdir -p dist"}}' > package.json
          mkdir -p dist
          
      - name: Install & Build
        run: |
          npm install
          npm run build

      - name: Package Extension
        run: |
          mkdir -p dist
          cd dist
          # Create a dummy file if directory is empty
          if [ -z "$(ls -A)" ]; then
            echo '{"manifest_version":3,"name":"Extension","version":"1.0"}' > manifest.json
          fi
          zip -r ../extension.zip .

      - name: Upload & Publish
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          file-path: extension.zip
          extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          publish: true
          
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./extension.zip
          asset_name: extension.zip
          asset_content_type: application/zip
